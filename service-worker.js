"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/index.html","51072ef4cf6f4a401eb8e5d244be0ab6"],["/static/css/main.a4e3684f.css","4822c88efa9afaa7ab76119768698eab"],["/static/js/main.a0a4b81a.js","3cff762024a711b18ec450e0c05abd6c"],["/static/media/OpenSans-Bold.3326e4d7.woff2","3326e4d74d3924ee1c882c29f5b571c0"],["/static/media/OpenSans-Bold.5a100916.ttf","5a100916f94b0babde0c92aaa8fb80d6"],["/static/media/OpenSans-Bold.89266734.woff","892667349c5cff6fcf7e40439596b97c"],["/static/media/OpenSans-Bold.d6291f88.svg","d6291f88056601e360ce6cea4bf676f4"],["/static/media/OpenSans-Light.39d27e13.woff2","39d27e13dce3dfe4cdc70a281ccdf113"],["/static/media/OpenSans-Light.963eb329.woff","963eb32907744d9a0d6b98127162808f"],["/static/media/OpenSans-Light.d79f0219.svg","d79f021974b1f6bc5c21f31689cde94f"],["/static/media/OpenSans-Light.ecb4572a.ttf","ecb4572a5e478b107dfcb60c16a7eefa"],["/static/media/OpenSans-Regular.55835483.woff2","55835483c304eaa8477fea2c36abba17"],["/static/media/OpenSans-Regular.ac327c4d.woff","ac327c4db6284ef64ebe872b6308f5da"],["/static/media/OpenSans-Regular.cd729635.ttf","cd7296352d159532b66c07d98efb1126"],["/static/media/OpenSans-Regular.f641a7d4.svg","f641a7d4e80fd6321135b1a2b4ce8bb1"],["/static/media/logo_15.fa453eb6.svg","fa453eb6ef4f7d83dd63abf9a0ee85d0"],["/static/media/medal_rus.79eeb763.png","79eeb7638ad2c7dcc2c0ab7d6905a0e0"],["/static/media/stamp-fr.ffc489a8.png","ffc489a82c884456c4d8c4b3928aa949"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),r]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,"index.html"),t=urlsToCacheKeys.has(a));!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL("/index.html",self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});